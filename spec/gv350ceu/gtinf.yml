name: "+RESP/+BUFF:GTINF"
device: "GV350CEU"
message_family: "INF"
encoding: "ASCII"
delimiter: ","
terminator: "$"
version_field: { name: full_protocol_version, length_variant: [6,7], format: hex }

schema:
  sections:
    - name: head
      fields:
        - { name: header, const_any: ["+RESP:GT", "+BUFF:GT"], type: string }
        - { name: message, const: "INF", type: string }
        - { name: full_protocol_version, type: hex, length_variant: [6,7] }
        - { name: imei, type: string, length: 15, pattern: "^[0-9]{15}$" }
        - { name: device_name, const: "GV350CEU", type: string }

    - name: body
      fields:
        - { name: motion_status, type: string, length: 2 }
        - { name: iccid, type: string, min_length: 19, max_length: 22 }
        - { name: csq, type: int, min: 0, max: 255 }
        - { name: ber, type: int, min: 0, max: 99 }
        - { name: ext_power_supply, type: int, enum: [0,1] }
        - { name: ext_power_voltage_mv, type: int, min: 0, max: 32000 }
        - { name: network_type, type: int, min: 0, max: 9 }
        - { name: backup_batt_volt_v, type: float, min: 0.00, max: 5.00, precision: 2 }
        - { name: charging, type: int, enum: [0,1] }
        - { name: led_state, type: int, min: 0, max: 9, optional: true }
        - { name: reserved1, type: string, optional: true }
        - { name: reserved2, type: string, optional: true }
        - { name: last_fix_utc, type: datetime, format: "YYYYMMDDHHMMSS" }
        - { name: reserved3, type: string, optional: true }
        - { name: ain1, type: string, optional: true }
        - { name: ain2, type: string, optional: true }
        - { name: ain3, type: string, optional: true }
        - { name: di_mask, type: hex, max_length: 4, optional: true }
        - { name: do_mask, type: hex, max_length: 4, optional: true }
        - { name: timezone_offset, type: string, length: 5, pattern: "^[+-][0-9]{4}$" }
        - { name: dst, type: int, enum: [0,1] }        

    - name: tail
      fields:
        - { name: send_time, type: datetime, format: "YYYYMMDDHHMMSS" }
        - { name: count_hex, type: hex, length: 4 }

validation:
  rules:
    - { name: header_and_message, assert: "(header in ['+RESP:GT', '+BUFF:GT']) and message == 'INF'" }
    - { name: terminator,        assert: "line.endswith('$')" }

examples:
  - raw: "+RESP:GTINF,74040A,862524060748775,GV350CEU,11,89999112400719062394,37,0,1,13074,,4.19,0,1,,,20251007213710,,0,0,0,00,00,+0000,0,20251007213751,6B91$"
    parsed_keys_must_include: [imei, device_name, motion_status, timezone_offset, send_time, count_hex]
  - raw: "+BUFF:GTINF,740904,862524060876527,GV350CEU,22,8935711001088072340f,38,0,1,28018,3,4.11,0,1,,,20251007143611,,0,0,0,11,00,+0000,0,20251007143612,34DA$"
    parsed_keys_must_include: [imei, device_name, motion_status, timezone_offset, send_time, count_hex]
